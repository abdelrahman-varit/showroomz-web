version: '3'

services:
  nginx:
    image: nginx:stable-alpine
    container_name: showroomz_nginx
    ports:
      - "80:80"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - mysql
    networks:
      - app-network

  mysql:
    image: mysql:5.7.22
    container_name: showroomz_mysql
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    volumes:
      - /var/showroomz-volume/mysql:/var/lib/mysql
    environment:
      MYSQL_DATABASE: showroomz-web
      MYSQL_USER: showroomz
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - app-network

  redis:
    image: redis:6.0.2-alpine
    container_name: showroomz_redis
    restart: unless-stopped
    tty: true
    ports:
      - "6379:6379"
    volumes:
      - /var/showroomz-volume/redis:/data
    networks:
      - app-network
  php:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: showroomz_php
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: showroomz_web
      SERVICE_TAGS: dev
    volumes:
      - ./:/var/www/html
    ports:
      - "9000:9000"
    networks:
      - app-network

  composer:
    image: composer:latest
    container_name: showroomz_composer
    volumes:
      - ./:/app
      - /var/showroomz-volume/composer:/tmp
    working_dir: /app
    networks:
      - app-network

  npm:
    image: node:13.7
    container_name: showroomz_npm
    volumes:
      - ./:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['npm']
    networks:
      - app-network

networks:
  app-network:
